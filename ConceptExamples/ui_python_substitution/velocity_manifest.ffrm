<?xml version="1.0"?>
<ResponseMap version="8.0.1.0">
    <responseStructure>application/json</responseStructure>
    <sampleDictionary>
        <item name="sample1">
            <responseBody>{
\t&quot;defaultData&quot;: {
\t\t&quot;commandSequence&quot;: [
\t\t\t&quot;%file% %parameterNameValuePairList%&quot;
\t\t],
\t\t&quot;description&quot;: &quot;%file% script run from core regression&quot;,
\t\t&quot;executionMessages&quot;: {
\t\t\t&quot;error&quot;: &quot;^.*(ERROR|CRITICAL).*&quot;,
\t\t\t&quot;info&quot;: &quot;^.*(DEBUG|INFO).*&quot;,
\t\t\t&quot;ok&quot;: &quot;^.*(verified).*&quot;,
\t\t\t&quot;warning&quot;: &quot;^.*(WARNING).*&quot;
\t\t},
\t\t&quot;headline&quot;: &quot;%file% from Core Regression Suite&quot;,
\t\t&quot;hidden&quot;: false,
\t\t&quot;namespace&quot;: &quot;CoreRegression&quot;,
\t\t&quot;owner&quot;: &quot;Joe Scripter&quot;,
\t\t&quot;parameters&quot;: [{
\t\t\t&quot;description&quot;: &quot;for all scripts (from defaultData)&quot;,
\t\t\t&quot;name&quot;: &quot;build&quot;,
\t\t\t&quot;type&quot;: &quot;TEXT&quot;,
\t\t\t&quot;value&quot;: &quot;72e8644&quot;
\t\t}],
\t\t&quot;timeout&quot;: 10,
\t\t&quot;verdictMethod&quot;: &quot;EXIT_CODE_VERDICT_PARSING&quot;,
\t\t&quot;verdictParsing&quot;: {
\t\t\t&quot;failTest&quot;: &quot;Finished: FAILED&quot;,
\t\t\t&quot;failTestIfPassing&quot;: &quot;Failure number \\\\d+&quot;,
\t\t\t&quot;passTest&quot;: &quot;Finished: PASSED&quot;,
\t\t\t&quot;passTestIfNotAlreadyFailed&quot;: &quot;SUCCESS&quot;
\t\t}
\t},
\t&quot;fileSets&quot;: [{
\t\t&quot;fileNameMatch&quot;: &quot;.*\\\\.bat&quot;,
\t\t&quot;commandSequence&quot;: [
\t\t\t&quot;%file% %param_build%&quot;
\t\t],
\t\t&quot;language&quot;: &quot;batch&quot;
\t}, {
\t\t&quot;fileNameMatch&quot;: &quot;simple\\\\.ps1&quot;,
\t\t&quot;language&quot;: &quot;powershell&quot;
\t}, {
\t\t&quot;fileNameMatch&quot;: &quot;timeout\\\\.sh&quot;,
\t\t&quot;language&quot;: &quot;bash&quot;,
\t\t&quot;timeout&quot;: 1
\t}, {
\t\t&quot;fileNameMatch&quot;: &quot;execution_env\\\\.py&quot;,
\t\t&quot;language&quot;: &quot;python&quot;,
\t\t&quot;requirements&quot;: [{
\t\t\t&quot;name&quot;: &quot;product.arch&quot;,
\t\t\t&quot;value&quot;: &quot;x86_64&quot;
\t\t}]
\t}, {
\t\t&quot;fileNameMatch&quot;: &quot;.*addTwoNumbersTogether\\\\.py&quot;,
\t\t&quot;extractedData&quot;: [{
\t\t\t&quot;pattern&quot;: &quot;^Added: (.*)$&quot;,
\t\t\t&quot;tag&quot;: &quot;addedNumbers&quot;
\t\t}, {
\t\t\t&quot;pattern&quot;: &quot;^Subtracted: (.*)$&quot;,
\t\t\t&quot;tag&quot;: &quot;subtractedNumbers&quot;
\t\t}],
\t\t&quot;language&quot;: &quot;python&quot;,
\t\t&quot;parameters&quot;: [{
\t\t\t&quot;description&quot;: &quot;first number&quot;,
\t\t\t&quot;name&quot;: &quot;input_number1&quot;,
\t\t\t&quot;type&quot;: &quot;TEXT&quot;,
\t\t\t&quot;value&quot;: &quot;10&quot;
\t\t}, {
\t\t\t&quot;description&quot;: &quot;second number&quot;,
\t\t\t&quot;name&quot;: &quot;input_number2&quot;,
\t\t\t&quot;type&quot;: &quot;TEXT&quot;,
\t\t\t&quot;value&quot;: &quot;5&quot;
\t\t}, {
\t\t\t&quot;description&quot;: &quot;added numbers&quot;,
\t\t\t&quot;name&quot;: &quot;output_addedNumbers&quot;,
\t\t\t&quot;type&quot;: &quot;TEXT&quot;,
\t\t\t&quot;value&quot;: &quot;NA&quot;
\t\t}, {
\t\t\t&quot;description&quot;: &quot;subtracted numbers&quot;,
\t\t\t&quot;name&quot;: &quot;output_subtractedNumbers&quot;,
\t\t\t&quot;type&quot;: &quot;TEXT&quot;,
\t\t\t&quot;value&quot;: &quot;NA&quot;
\t\t}]
\t}, {
\t\t&quot;fileNameMatch&quot;: &quot;extractedData\\\\.py&quot;,
\t\t&quot;extractedData&quot;: [{
\t\t\t&quot;pattern&quot;: &quot;^DUT Version : (.*)$&quot;,
\t\t\t&quot;tag&quot;: &quot;DUT Build Number&quot;
\t\t}, {
\t\t\t&quot;pattern&quot;: &quot;^Response Time : (\\\\d+)$&quot;,
\t\t\t&quot;tag&quot;: &quot;Response Latency ms&quot;
\t\t}],
\t\t&quot;language&quot;: &quot;python&quot;
\t}, {
\t\t&quot;fileNameMatch&quot;: &quot;.*\\\\.py&quot;,
\t\t&quot;parameters&quot;: [{
\t\t\t&quot;description&quot;: &quot;for all other .py files (from fileNameMatch)&quot;,
\t\t\t&quot;name&quot;: &quot;python_parameter&quot;,
\t\t\t&quot;type&quot;: &quot;TEXT&quot;,
\t\t\t&quot;value&quot;: &quot;my Python parameter&quot;
\t\t}]
\t}]
}</responseBody>
        </item>
    </sampleDictionary>
    <aliases>
        <item name="fileNameMatch_by_language">
            <queryFormatString>mapped/Json/fileSets/item[language=&apos;{0}&apos;]/fileNameMatch</queryFormatString>
            <arguments>
                <item name="language">
                    <valuesQuery>mapped/Json/fileSets/item/language</valuesQuery>
                    <interpretAs>SampleValues</interpretAs>
                </item>
            </arguments>
        </item>
    </aliases>
</ResponseMap>
