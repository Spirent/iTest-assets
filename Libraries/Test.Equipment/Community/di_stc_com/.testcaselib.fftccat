<?xml version="1.0"?>
<TestCaseCatalog version="8.0.0.201908290812">
    <testCaseCatalog>
        <item name="session_profiles/Spirent_TestCenter_REST_ref_session_profile_quickcall_library.fftc">
            <tcDescriptor version="8.0.0.201908290812">
                <general>
                    <notes>Spirent TestCenter QuickCalls for traffic management, capture controls, and 802.11 wifi operations
Video at: https://youtu.be/Jt9g0owf0Qg</notes>
                    <sessionClass includeTestCase="true" sessionType="project://di_stc_com/session_profiles/Spirent_TestCenter_REST_ref_session_profile.ffsp"/>
                </general>
                <procedures>
                    <item name="associateIeee80211clientprofile" isPublic="true">
                        <multilineDescription>Associate an 802.11 client profile with an emulated device</multilineDescription>
                        <arguments>
                            <item name="emulatedDeviceName">
                                <description>Name of the emulated device to associate 802.11 client profile</description>
                                <defaultValue>Device 1</defaultValue>
                            </item>
                            <item name="ieee80211clientprofileName">
                                <description>Name of the 802.11 client profile to associate</description>
                                <defaultValue>Default Client Profile</defaultValue>
                            </item>
                        </arguments>
                    </item>
                    <item name="capturePortPcap" isPublic="true">
                        <description>Capture ports frames and save in PCAP</description>
                        <arguments>
                            <item name="port">
                                <description>Port you want to capture data.</description>
                                <defaultValue>1</defaultValue>
                                <isMandatory>true</isMandatory>
                            </item>
                            <item name="filePath">
                                <description>Where do you want to save the data.

Example: file:/C:/stc.pcap</description>
                                <isMandatory>true</isMandatory>
                            </item>
                            <item name="delay">
                                <description>Amount of time to capture data</description>
                                <defaultValue>5</defaultValue>
                            </item>
                        </arguments>
                    </item>
                    <item name="configureTrafficProfile" isPublic="true">
                        <description>Configure traffic load profile for TG stream</description>
                        <author>mbarfield</author>
                        <multilineDescription>This is used to set the load for a traffic stream</multilineDescription>
                        <arguments>
                            <item name="portIndex">
                                <description>Applies any changes that you made to configuration settings. This changes generator profile settings. Returns generator information.</description>
                                <isMandatory>true</isMandatory>
                            </item>
                            <item name="loadPortBasedPercent">
                                <description>This is the fixed load percentage based on negotiated line rate. For example, 30% load on 1GE line rate is 300Mb/s</description>
                                <isMandatory>true</isMandatory>
                            </item>
                        </arguments>
                    </item>
                    <item name="configureIeee80211clientprofile" isPublic="true">
                        <multilineDescription>Configure any property of an 802.11 client profile</multilineDescription>
                        <arguments>
                            <item name="Name">
                                <description>Name of the IEEE 802.11 profile to configure</description>
                                <defaultValue>Default Client Profile</defaultValue>
                            </item>
                            <item name="AMPDUOption"/>
                            <item name="AMSDUOption"/>
                            <item name="Active"/>
                            <item name="ActiveKey"/>
                            <item name="AkaAuthenticationKey"/>
                            <item name="AkaMobileSubscriberIdentity"/>
                            <item name="AkaOperatorVariantCode"/>
                            <item name="AkaRealmName"/>
                            <item name="AkaSequenceNumber"/>
                            <item name="BSSID"/>
                            <item name="ChannelWidth"/>
                            <item name="ClientCertificateFilePath"/>
                            <item name="ClientCertificationAuthorityFilePath"/>
                            <item name="ClientPrivateKeyFilePath"/>
                            <item name="ClientProfileName"/>
                            <item name="EapAuthenticationType"/>
                            <item name="EncryptionType"/>
                            <item name="FastAnonymousIdentity"/>
                            <item name="FastPassword"/>
                            <item name="FastPeerIdentity"/>
                            <item name="FastProvisioning"/>
                            <item name="FastTransitionBSSID"/>
                            <item name="FastTransitionOverDS"/>
                            <item name="FastTransitionRoaming"/>
                            <item name="GuardInterval"/>
                            <item name="HT40MhzSupport"/>
                            <item name="IsFastReauthentication"/>
                            <item name="Key1"/>
                            <item name="Key1Type"/>
                            <item name="Key2"/>
                            <item name="Key2Type"/>
                            <item name="Key3"/>
                            <item name="Key3Type"/>
                            <item name="Key4"/>
                            <item name="Key4Type"/>
                            <item name="KeyFormat"/>
                            <item name="LDPCSupport"/>
                            <item name="LeapPassword"/>
                            <item name="LeapPeerIdentity"/>
                            <item name="MaxAMPDUSize"/>
                            <item name="MaxAMSDU"/>
                            <item name="MaxVhtAMPDUSize"/>
                            <item name="MinAMSDUDensity"/>
                            <item name="ModulationCodingSchemeType"/>
                            <item name="PassPhrase"/>
                            <item name="PeapAnonymousIdentity"/>
                            <item name="PeapClientCertificationAuthorityFilePath"/>
                            <item name="PeapForceNewLabel"/>
                            <item name="PeapPassword"/>
                            <item name="PeapPeerIdentity"/>
                            <item name="PeapPhaseTwoAuthentication"/>
                            <item name="PeapVersion"/>
                            <item name="PeerIdentity"/>
                            <item name="ProtocolRate"/>
                            <item name="SSID"/>
                            <item name="TlsPassword"/>
                            <item name="TtlsAnonymousIdentity"/>
                            <item name="TtlsClientCertificationAuthorityFilePath"/>
                            <item name="TtlsPassword"/>
                            <item name="TtlsPeerIdentity"/>
                            <item name="TtlsPhaseTwoAuthentication"/>
                        </arguments>
                    </item>
                    <item name="configureIeee80211phyMimoMode" isPublic="true">
                        <multilineDescription>Configure 802.11 MIMO mode of a physical wifi port</multilineDescription>
                        <arguments>
                            <item name="portName">
                                <description>Name of the wifi port to configure</description>
                                <defaultValue>Port //12/1</defaultValue>
                            </item>
                            <item name="mimoMode">
                                <description>Possible Values:
Value | Description
SU_MIMO | Single-User MIMO
MU_MIMO | Multi-User MIMO</description>
                                <defaultValue>SU_MIMO</defaultValue>
                            </item>
                        </arguments>
                    </item>
                    <item name="createIeee80211clientprofile" isPublic="true">
                        <multilineDescription>Create a 802.11 client profile with default values</multilineDescription>
                        <arguments>
                            <item name="Name">
                                <description>Name of the IEEE 802.11 profile to create (recommended to use a unique name)</description>
                                <isMandatory>true</isMandatory>
                            </item>
                        </arguments>
                    </item>
                    <item name="deadStreamCount" isPublic="true">
                        <description>Return number of streams that are dead</description>
                        <arguments>
                            <item name="delaySec">
                                <description>Delay in seconds between checks</description>
                                <defaultValue>5</defaultValue>
                            </item>
                        </arguments>
                    </item>
                    <item name="getBasicDeviceInfo" isPublic="true" isVBlock="true">
                        <description>Return basic device info used for packet analysis</description>
                        <author>mbarfield</author>
                        <multilineDescription>This will return basic port info used to for L2/L3 traffic

Return: MAC, IP, and GW</multilineDescription>
                        <arguments>
                            <item name="port">
                                <description>Valid port index
Example: 1</description>
                                <isMandatory>true</isMandatory>
                            </item>
                            <item name="portId">
                                <description>Valid port id
Example: 1</description>
                                <defaultValue>1</defaultValue>
                            </item>
                        </arguments>
                        <response>{&quot;SourceMacAddress&quot;:&quot;value&quot;,&quot;IPv4Address&quot;:&quot;value&quot;,&quot;IPv4DefaultGateway&quot;:&quot;value&quot;}</response>
                    </item>
                    <item name="getBasicPortTxRxCounters" isPublic="true" isVBlock="true">
                        <description>Return basic Tx/Rx counters for the specified</description>
                        <author>mbarfield</author>
                        <multilineDescription>Returns the Tx/Rx Frame/Bit counters for the specified port</multilineDescription>
                        <arguments>
                            <item name="port">
                                <description>This is the STC port value that can be captured from getPorts QC.

Example: Port //2/9</description>
                                <isMandatory>true</isMandatory>
                            </item>
                        </arguments>
                        <response>{&quot;totalTxCountFrames&quot;:&quot;value&quot;,&quot;totalRxCountFrames&quot;:&quot;value&quot;,&quot;totalTxCountBits&quot;:&quot;value&quot;,&quot;totalRxCountBits&quot;:&quot;value&quot;}</response>
                    </item>
                    <item name="getIeee80211clientprofile" isPublic="true">
                        <multilineDescription>Show all the properties of a given 802.11 client profile</multilineDescription>
                        <arguments>
                            <item name="Name">
                                <description>Name of the IEEE 802.11 profile to display</description>
                                <defaultValue>Default Client Profile</defaultValue>
                            </item>
                        </arguments>
                    </item>
                    <item name="getPorts" isPublic="true">
                        <description>Return list of provisioned port values</description>
                        <author>mbarfield</author>
                        <multilineDescription>Returns a list of provisioned ports</multilineDescription>
                    </item>
                    <item name="pcapCapture" isPublic="true">
                        <description>capturePcap</description>
                        <author>mbarfield</author>
                        <multilineDescription>Capture PCAP and examine PCAP using other tools like wireshark</multilineDescription>
                        <arguments>
                            <item name="portList">
                                <description>Enter a valid portList value -e.g. 1</description>
                                <isMandatory>true</isMandatory>
                            </item>
                            <item name="captureDelaySec">
                                <description>Enter time in seconds for how long to capture data</description>
                                <defaultValue>2</defaultValue>
                            </item>
                            <item name="filepath">
                                <description>Enter a valid file path to save the data.

Example: file:/C:/Users/MBARFI~1/AppData/Local/Temp/stc.pcap</description>
                                <isMandatory>true</isMandatory>
                            </item>
                        </arguments>
                    </item>
                    <item name="sanityCheckTraffic" isPublic="true">
                        <description>This procedure will make sure that traffic is running and meets minimal conditions before moving forward</description>
                        <multilineDescription>This will check if traffic is running, out-of-order packets, duplicates, and dropped packets</multilineDescription>
                        <arguments>
                            <item name="sanityCheckDelaySec">
                                <description>This is a short delay bfeore checking traffic to give system enough time to intialize</description>
                                <defaultValue>5</defaultValue>
                            </item>
                        </arguments>
                    </item>
                    <item name="setStandardTrafficResults" isPublic="true">
                        <description>Set the different traffic results you want to capture</description>
                        <author>mbarfield</author>
                        <multilineDescription>Set your common traffic results you want the traffic generator to capture. This should be standard for most of your tests.

List includes:
DetailedStreamResults, BasicTrafficResults, and PortResults</multilineDescription>
                    </item>
                    <item name="startArpClearCounters" isPublic="true" isVBlock="true">
                        <description>Init traffic system by arp and clear counters</description>
                        <author>mbarfield</author>
                        <multilineDescription>This will allow users to intiate ARP request and clear counters before starting traffic</multilineDescription>
                        <arguments>
                            <item name="startArp">
                                <description>Starts ARP/ND packets for the specified ports and returns the ARP/ND state.

True or False (1|0)</description>
                                <defaultValue>1</defaultValue>
                            </item>
                            <item name="clearResults">
                                <description>Clear all counters

True or False (1|0)</description>
                                <defaultValue>1</defaultValue>
                            </item>
                        </arguments>
                        <response>{&quot;arpResponse&quot;:&quot;value&quot;}</response>
                    </item>
                    <item name="startTraffic" isPublic="true">
                        <description>Start traffic and run optional sanity check</description>
                        <author>mbarfield</author>
                        <multilineDescription>Start traffic generator and run optional sanity check to look for dead streams, out-of-order and duplicate packets. Also, set traffic exection time in seconds.</multilineDescription>
                        <arguments>
                            <item name="sanityCheck">
                                <description>Sanity check the traffic streams for common errors

true or false (1|0)</description>
                                <defaultValue>1</defaultValue>
                            </item>
                            <item name="trafficDurationSec">
                                <description>Set traffic duration in seconds.</description>
                                <defaultValue>30</defaultValue>
                            </item>
                        </arguments>
                    </item>
                    <item name="stopTraffic" isPublic="true">
                        <description>Stop traffic</description>
                        <author>mbarfield</author>
                        <multilineDescription>Stop traffic - no return value</multilineDescription>
                    </item>
                </procedures>
            </tcDescriptor>
        </item>
        <item name="session_profiles/sqlite_quickcall_library.fftc">
            <tcDescriptor version="8.0.0.201908290812">
                <general>
                    <documentation>QC library for SQLite</documentation>
                    <notes>QC library for SQLite</notes>
                    <owner>mbarfield</owner>
                    <sessionClass includeTestCase="true" sessionType="sqlite.ffsp"/>
                </general>
                <procedures>
                    <item name="sanityCheckL2" isPublic="true" defaultSessionProfile="application:com.fnfr.itest.tools.database">
                        <description>Check that you don&apos;t get psuedo pass results for traffic</description>
                        <author>Mike Barfield</author>
                        <multilineDescription>This is a quick sanity check to ensure that you don&apos;t get psuedo pass results after transmitting traffic.</multilineDescription>
                    </item>
                </procedures>
            </tcDescriptor>
        </item>
        <item name="session_profiles/stc_quickcall_library.fftc">
            <tcDescriptor version="8.0.0.201908290812">
                <general>
                    <documentation>STC TCL QC library</documentation>
                    <notes>STC TCL QC library</notes>
                    <owner>mbarfield</owner>
                    <isProcedureLibrary>true</isProcedureLibrary>
                    <sessionClass includeTestCase="true" sessionType="project://di_stc_com/session_profiles/stc.ffsp"/>
                </general>
                <procedures>
                    <item name="apiSaveResultCommand" isPublic="true" defaultSessionProfile="application:com.fnfr.svt.applications.spirent.testcenter.gui">
                        <description>Save STC results into a SQLite database</description>
                        <author>Mike Barfield</author>
                        <multilineDescription>Use this procedure to save STC results into a SQLite DB file. This file can be queried for analysis purposes. SQL queries are more efficient at data mining versus other techniques.

Also, this converts the results to the Results Reporter schema so you can use Results Reporter to help you query data results.

Note: must run generator before saving a results file.</multilineDescription>
                        <arguments>
                            <item name="databaseConnectionStringFilePath">
                                <description>Filepath to use for the output file. By default the filename will have the date and time as part of its name, like this example: C:/stcResults

Type: outputFilePath
Default: &quot;&quot; (empty string)</description>
                                <defaultValue>C:/stcResults</defaultValue>
                            </item>
                            <item name="databaseConnectionStringFileName">
                                <description>Filename to use for the output file. By default the filename will have the date and time as part of its name, like this example: stcTestRunResults.db

Type: outputFilePath
Default: &quot;&quot; (empty string)</description>
                                <defaultValue>stcTestRunResults.db</defaultValue>
                            </item>
                            <item name="saveDetailedResults">
                                <description>Type: bool
Possible Values:
Value Description
TRUE
FALSE</description>
                                <defaultValue>TRUE</defaultValue>
                            </item>
                            <item name="overwriteIfExist">
                                <description>Flag to indicate whether the file will be overwritten if it exists.
Type: bool
Possible Values:
Value Description
TRUE If a file with the same name exists it will be overwritten.
FALSE If a file with the same name exists it will be appended to.</description>
                                <defaultValue>TRUE</defaultValue>
                            </item>
                            <item name="convertSchema">
                                <description>This option converts the raw DB to the Results Reporter Schema. This allows the user to take advanatage of the Results Reporter schema and use the built in queries provided by Results Reporter.

enabled = 1 (default)
disabled = 0</description>
                                <defaultValue>1</defaultValue>
                            </item>
                            <item name="stcVersion">
                                <description>Enter the valid STC version you want to use to convert schema. This is the version used in the install path - e.g. 4.49:
C:\\Program Files (x86)\\Spirent Communications\\Spirent TestCenter 4.49\\Spirent TestCenter Application</description>
                                <defaultValue>4.49</defaultValue>
                            </item>
                        </arguments>
                    </item>
                    <item name="subscribeResults" isPublic="true">
                        <description>List of results required to execute test case</description>
                        <author>mbarfield</author>
                        <arguments>
                            <item name="subscribedResults">
                                <description>List of results required to analyze traffic - e.g. DetailedStreamResults</description>
                                <isMandatory>true</isMandatory>
                            </item>
                        </arguments>
                    </item>
                    <item name="sanityCheckTraffic" isPublic="true">
                        <description>This procedure will make sure that traffic is running and meets minimal conditions before moving forward</description>
                        <author>mbarfield</author>
                        <multilineDescription>This will check if traffic is running, out-of-order packets, duplicates, and dropped packets</multilineDescription>
                        <arguments>
                            <item name="sanityCheckDelaySec">
                                <description>This is a short delay bfeore checking traffic to give system enough time to intialize</description>
                                <defaultValue>5</defaultValue>
                            </item>
                        </arguments>
                    </item>
                    <item name="deadStreamCount" isPublic="true">
                        <description>Return number of streams that are dead</description>
                        <author>mbarfield</author>
                        <arguments>
                            <item name="delaySec">
                                <description>Delay in seconds between checks</description>
                                <defaultValue>5</defaultValue>
                            </item>
                        </arguments>
                    </item>
                    <item name="capturePortPcap" isPublic="true">
                        <description>Capture ports frames and save in PCAP</description>
                        <author>mbarfield</author>
                        <arguments>
                            <item name="port">
                                <description>Port you want to capture data.</description>
                                <defaultValue>1</defaultValue>
                                <isMandatory>true</isMandatory>
                            </item>
                            <item name="filePath">
                                <description>Where do you want to save the data.

Example: file:/C:/stc.pcap</description>
                                <isMandatory>true</isMandatory>
                            </item>
                            <item name="delay">
                                <description>Amount of time to capture data</description>
                                <defaultValue>5</defaultValue>
                            </item>
                        </arguments>
                    </item>
                    <item name="get_port_id_by_location" isPublic="true">
                        <arguments>
                            <item name="location">
                                <description>location: Location of the port </description>
                            </item>
                        </arguments>
                    </item>
                    <item name="getClientProfileId" isPublic="true">
                        <arguments>
                            <item name="clientProfileName">
                                <description>Name of the Client Profile to be attached to Ethernet Port</description>
                            </item>
                        </arguments>
                    </item>
                    <item name="attachClientProfile" isPublic="true">
                        <arguments>
                            <item name="clientProfileId">
                                <description>clientProfileId:  AP client profile ID</description>
                            </item>
                            <item name="port">
                                <description>port: Wifi Port</description>
                            </item>
                        </arguments>
                    </item>
                    <item name="attenuateChannelPower" isPublic="true">
                        <arguments>
                            <item name="port">
                                <description>port -&gt; This is the port on which the power attenuation need to be applied.</description>
                            </item>
                            <item name="channelPower">
                                <description>Power of the channel, larger the number, higher will be the attenuation</description>
                            </item>
                        </arguments>
                    </item>
                    <item name="modifyMIMO" isPublic="true">
                        <multilineDescription>This procedure modifies MIMO type based on Parameter</multilineDescription>
                        <arguments>
                            <item name="wifiPort">
                                <description>Port where the MIMO configuration need to be modified</description>
                                <isMandatory>true</isMandatory>
                            </item>
                            <item name="mimoType">
                                <description>MIMO type to be modified, it will have following values
MIMO_1X1
MIMO_2X2
MIMO_3X3
MIMO_4X4</description>
                                <isMandatory>true</isMandatory>
                            </item>
                        </arguments>
                    </item>
                    <item name="modifyChannelFreqncy" isPublic="true">
                        <arguments>
                            <item name="wifiPort">
                                <description>Port where the Freqncy Channel need to be modified</description>
                                <isMandatory>true</isMandatory>
                            </item>
                            <item name="frqBand">
                                <description>Frequncy band that need to be set

Following are different options

Value                                Description
FREQ_AUTO                      Auto
FREQ_2_4_GHZ                 2.4 GHz
FREQ_5_0_GHZ                 5.0 GHz</description>
                                <defaultValue>FREQ_5_0_GHZ</defaultValue>
                                <isMandatory>true</isMandatory>
                            </item>
                        </arguments>
                    </item>
                    <item name="getBSSID" isPublic="true" isVBlock="true">
                        <arguments>
                            <item name="wifiPort">
                                <description>wifiPort --&gt; Port where the Client are attached</description>
                                <isMandatory>true</isMandatory>
                            </item>
                            <item name="clientProfileId">
                                <description>clientProfileId --&gt; Profile ID of the client </description>
                            </item>
                        </arguments>
                        <response>{&quot;bssid&quot;:&quot;value&quot;}</response>
                    </item>
                    <item name="setChannelBW" isPublic="true">
                        <arguments>
                            <item name="wifiPort">
                                <description>Port where the MIMO configuration need to be modified</description>
                                <isMandatory>true</isMandatory>
                            </item>
                            <item name="channelType">
                                <description>It will be of type 
ChannelBandWidth20Mhz
ChannelBandWidth40Mhz
ChannelBandWidth80Mhz</description>
                                <isMandatory>true</isMandatory>
                            </item>
                        </arguments>
                    </item>
                    <item name="clearChannelBW" isPublic="true"/>
                    <item name="getEmulateDeviceIdForPort" isPublic="true">
                        <arguments>
                            <item name="InPort">
                                <description>Port for Which user wants to get the the emulated device id. This works for existing device (1 device) for a port</description>
                            </item>
                        </arguments>
                    </item>
                    <item name="getTechnologyType" isPublic="true">
                        <arguments>
                            <item name="wifiPort">
                                <description>Wifi Port of STC </description>
                                <isMandatory>true</isMandatory>
                            </item>
                        </arguments>
                    </item>
                    <item name="setSMAattenuation" isPublic="true">
                        <multilineDescription>This Procedure will the channel Attenuation, since it might be called multiple time for setting multiple attenaution on different SMA&apos;s, 
stc::apply need to used by calling test case</multilineDescription>
                        <arguments>
                            <item name="smaPort">
                                <description>smaPort 

This is SMA port (Attenuator) on Wifi Port generally 

1 2 3 4 --&gt;  For 2.4 GHz 
5 6 7 8 --&gt;  For 5.0 GHz</description>
                            </item>
                            <item name="attenLevel">
                                <description>Default Attenuation level.

QC will multiply attenuation by 4 (to increment approx) so that correct attenuation level is mantained

Min value: 0 db
Max value: 60 db</description>
                                <defaultValue>0</defaultValue>
                            </item>
                            <item name="wifiPort">
                                <description>Wifi Port on which the SMA&apos;s are present</description>
                            </item>
                        </arguments>
                    </item>
                    <item name="stcApply" isPublic="true"/>
                </procedures>
            </tcDescriptor>
        </item>
    </testCaseCatalog>
</TestCaseCatalog>
